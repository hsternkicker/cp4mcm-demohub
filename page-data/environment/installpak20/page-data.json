{"componentChunkName":"component---src-pages-environment-installpak-20-index-mdx","path":"/environment/installpak20/","result":{"pageContext":{"frontmatter":{"title":"NEW - Installing Cloud Pak for MCM 2.0","description":"IBM Cloud Pak for MCM 2.0"},"relativePagePath":"/environment/installpak20/index.mdx","titleType":"page","MdxNode":{"id":"144797a8-a3a9-5027-8fe5-9f2dff21b93e","children":[],"parent":"dca6dd45-0aae-5160-ad75-a52d6756788a","internal":{"content":"---\ntitle: NEW - Installing Cloud Pak for MCM 2.0\ndescription: IBM Cloud Pak for MCM 2.0\n---\n\nNow that you have a ROKS cluster, you need to install manually the Cloud Pak for Multicloud Management 2.0. Let's do it!\n\nTo use the installation script provided below you need a ROKS cluster with 2 or more worker nodes (full install requires 4 nodes 16 core + 32 GB RAM) and workstation (Linux or Mac) with following tools installed: (git, make, jq, cloudctl, oc, kubectl)\n\n1. Open a terminal window and create some working directory. Clone git repo with the installation scripts. You may be asked for w3 authentication. If you haven't done so before look at the [Authentication to github.ibm.com](#authentication-to-githubibmcom) at the bottom.\n\n   ```bash\n   mkdir installmcm20\n   cd installmcm20\n   git clone https://github.ibm.com/john-webb/CP4MCM_20.git\n   ```\n\n2. Login to [https://cloud.ibm.com](https://cloud.ibm.com) if you have not done that already. Open the details of OCP cluster in IBM Cloud - if you requested it via ibm.com/demos go to the **My reservations**, open **Details** and use **Cluster URL**.\n\n   ![roks details](images/2020-09-14-21-14-11.png)\n\n3. Click the **Openshift web console** to open Openshift console and get the CLI login credentials\n\n   ![openshift console](images/2020-09-09-13-47-25.png)\n\n   ![copy login command](images/2020-09-09-13-43-56.png)\n\n   ![oc command](images/2020-09-09-14-12-43.png)\n\n   Copy and paste the `oc login` command to the Terminal window on your workstation.\n\n   ![terminal oc login](images/2020-09-09-14-20-36.png)\n\n4. Log in to [MyIBM Container Software Library](https://myibm.ibm.com/products-services/containerlibrary) by using the IBMid and password that are associated with the entitled software.\n\n5. In the Entitlement keys section, select Copy key to copy the entitlement key to the clipboard.\n\n   ![entitlement key](images/2020-09-09-14-14-40.png)\n\n6. In the terminal window on your workstation create an environment variable holding the value of the entitlement key\n\n   ```bash\n   cd CP4MCM_20\n   export ENTITLED_REGISTRY_KEY=<entitlement_key>\n   ```\n\n7. With your favourite editor edit the file `0-setup_env.sh` on your workstation and adjust the following variables (your ROKS cluster may be deployed in other region or zone)\n\n   ```bash\n   ROKSREGION=\"us-south\"\n   ROKSZONE=\"dal10\"\n   ```\n\n   The values can be found in IBM Cloud console\n   ![cluster location](images/2020-09-09-14-33-01.png)\n\n8. Run the installation first scipt which registers the operators in the catalog\n\n   ```bash\n   ./1-common-services.sh\n   ```\n\n   Output should look like below:\n\n   ```bash\n   ./1-common-services.sh\n   catalogsource.operators.coreos.com/opencloud-operators created\n   Waiting for CatalogSource (60 seconds)\n   Done.\n   ```\n\n9. To install Cloud Pak for MCM Core Services run the following command\n\n   ```bash\n   ./cp4m/2-cp4mcm-core.sh\n   ```\n\n   Output should look like below:\n\n   ```bash\n   ./cp4m/2-cp4mcm-core.sh\n   Now using project \"cp4m\" on server \"https://c100-e.us-south.containers.cloud.ibm.com:30972\".\n\n   You can add applications to this project with the 'new-app' command. For example, try:\n\n       oc new-app django-psql-example\n\n   to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:\n\n       kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node\n\n   secret/ibm-management-pull-secret created\n   catalogsource.operators.coreos.com/management-installer-index created\n   Waiting for CP4MCM CatalogSource (60 seconds)\n   subscription.operators.coreos.com/ibm-management-orchestrator created\n   Waiting for CP4MCM Subscription (60 seconds)\n   Applying the CP4MCM 2.0 - Core Installation\n   installation.orchestrator.management.ibm.com/ibm-management created\n   Installation has started. Check status by running 'oc get opreq -A'\n   NAMESPACE   NAME                        AGE   PHASE        CREATED AT\n   cp4m        ibm-management-cs           12s   Installing   2020-09-09T12:45:56Z\n   cp4m        ibm-management-foundation   5s    Pending      2020-09-09T12:46:03Z\n   ```\n\n   Install can take several minutes. Wait until the output of `oc get opreq -A` command looks like below:\n\n   ```bash\n   $ oc get opreq -A\n   NAMESPACE             NAME                                         AGE     PHASE     CREATED AT\n   cp4m                  ibm-management-cs                            8m22s   Running   2020-09-09T12:45:56Z\n   cp4m                  ibm-management-foundation                    8m15s   Running   2020-09-09T12:46:03Z\n   ibm-common-services   catalog-ui-request                           6m6s    Running   2020-09-09T12:48:12Z\n   ibm-common-services   helm-api-request                             3m27s   Running   2020-09-09T12:50:51Z\n   ibm-common-services   helm-repo-request                            3m26s   Running   2020-09-09T12:50:52Z\n   ibm-common-services   ibm-auditlogging-request                     6m8s    Running   2020-09-09T12:48:10Z\n   ibm-common-services   ibm-commonui-request                         6m9s    Running   2020-09-09T12:48:09Z\n   ibm-common-services   ibm-iam-request                              7m41s   Running   2020-09-09T12:46:37Z\n   ibm-common-services   ibm-licensing-request                        6m11s   Running   2020-09-09T12:48:07Z\n   ibm-common-services   ibm-metering-request                         6m10s   Running   2020-09-09T12:48:08Z\n   ibm-common-services   ibm-mongodb-request                          5m33s   Running   2020-09-09T12:48:45Z\n   ibm-common-services   management-ingress                           6m12s   Running   2020-09-09T12:48:06Z\n   ibm-common-services   monitoring-exporters-operator-request        7m40s   Running   2020-09-09T12:46:38Z\n   ibm-common-services   monitoring-grafana-operator-request          6m13s   Running   2020-09-09T12:48:05Z\n   ibm-common-services   monitoring-prometheus-ext-operator-request   6m13s   Running   2020-09-09T12:48:05Z\n   ibm-common-services   platform-api-request                         6m7s    Running   2020-09-09T12:48:11Z\n   kube-system           ibm-license-advisor-sender-instance          6m5s    Running   2020-09-09T12:48:13Z\n   ```\n\n10. To access the Cloud Pak console run the following commands to find out the URL and admin password\n\n    ```bash\n    YOUR_CP4MCM_ROUTE=`oc -n ibm-common-services get route cp-console --template '{{.spec.host}}'`\n    CP_PASSWORD=`oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 -d`\n    echo \" You can access your cluster with the URL and credentials below:\"\n    echo \" URL = https://$YOUR_CP4MCM_ROUTE\"\n    echo \" User = admin\"\n    echo \" Password = $CP_PASSWORD\"\n    ```\n\n11. Use the output from the above command in your browser. \n\n    ![cp-console login](images/2020-09-09-15-04-03.png)\n\n12. Upon successful login you should see the welcome screen shown below. If you see error *504 Gateway Time-out*, it means the environment was not yet fully initialized. Wait additional 1-2 minutes and refresh the browser.\n\n    ![welcome screen](images/2020-09-09-15-06-48.png)\n\n13. Continue the installation running in the terminal window LDAP creation script `./cp4m/3-ldap.sh`. To complete this part you need `cloudctl` utility installed on your workstation\n    You can check if it is installed running the following command:\n\n    ```bash\n    cloudctl version\n    ```\n\n    For procedure how to install `cloudctl` look here: [Installing cloudctl](https://www.ibm.com/support/knowledgecenter/pl/SSFC4F_2.0.0/cloudctl/3.x.x/install_cli.html)\n\n    ```bash\n    ./cp4m/3-ldap.sh\n    ```\n\n    Sample output looks like below:\n\n    ```bash\n    Authenticating...\n    OK\n\n    Targeted account mycluster Account\n\n    Targeted namespace default\n\n    Configuring kubectl ...\n    Property \"clusters.mycluster\" unset.\n    Property \"users.mycluster-user\" unset.\n    Property \"contexts.mycluster-context\" unset.\n    Cluster \"mycluster\" set.\n    User \"mycluster-user\" set.\n    Context \"mycluster-context\" created.\n    Switched to context \"mycluster-context\".\n    OK\n\n    Configuring helm: /Users/dymaczew/.helm\n    OK\n    securitycontextconstraints.security.openshift.io/anyuid added to: [\"system:serviceaccount:ldap:default\"]\n    deployment.apps/ldap created\n    service/ldap-service created\n    Sleeping while LDAP is starting.. (60 seconds)\n    LDAP connection my_ldap 'bcded990-f29d-11ea-878f-e59d81bf9fa1' successfully created\n    OK\n    Group operations imported\n    OK\n    ```\n\n   At this point the LDAP authentication is enabled. You can notice the changed Login screen, now showing:\n\n   ![login options](images/2020-09-09-15-16-25.png)\n\n   If you select **Enterprise LDAP** you can use one of the predefined users to login - for example **bob** with password **Passw0rd**.\n\n14. To install Infrastructure Management module run the following script:\n\n    ```bash\n    ./cp4m/4-CAMandIM.sh\n    ```\n\n    Output will look like below:\n\n    ```bash\n    Create management-infrastructure-management namespace.\n    Now using project \"management-infrastructure-management\" on server \"https://c100-e.us-south.containers.cloud.ibm.com:30972\".\n\n    You can add applications to this project with the 'new-app' command. For example, try:\n\n        oc new-app django-psql-example\n\n    to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:\n\n        kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node\n\n    Adding CAM Config to Installaton (CAM_API_KEY = )(ROKS = true)\n    installation.orchestrator.management.ibm.com/ibm-management patched\n    Enabling the IM Module in the  Installation\n    installation.orchestrator.management.ibm.com/ibm-management patched\n    Installation has started. Check status by running 'oc get opreq -A'\n    ```\n\n15. To install CloudForms you can run the following script:\n\n    ```bash\n    ./cp4m/5-CloudFormsandOIDC.sh`\n    ```\n\n    Output should be similar to the one shown below:\n\n    ```bash\n    YOUR_CLIENT_ID = VGhlcmUgaXMgYSBodWdlIHdoaXRlIGVsZXBoYW50IGluIExBIHpvbwo=\n    YOUR_CLIENT_SECRET = MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDUK\n    YOUR_CP4MCM_ROUTE = cp-console.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    YOUR_IM_HTTPD_ROUTE = inframgmtinstall.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    CP_PASSWORD = XXXXXXXXXXXXXXXXXXXXXXX\n    ENTITLED_REGISTRY_SECRET = ibm-management-pull-secret\n    Authenticating...\n    OK\n\n    Targeted account mycluster Account\n\n    Targeted namespace ibm-common-services\n\n    Configuring kubectl ...\n    Property \"clusters.mycluster\" unset.\n    Property \"users.mycluster-user\" unset.\n    Property \"contexts.mycluster-context\" unset.\n    Cluster \"mycluster\" set.\n    User \"mycluster-user\" set.\n    Context \"mycluster-context\" created.\n    Switched to context \"mycluster-context\".\n    OK\n\n    Configuring helm: /Users/dymaczew/.helm\n    OK\n    Registering IAM OAUTH client.\n    OK\n    client_name:\t\tVGhlcmUgaXMgYSBodWdlIHdoaXRlIGVsZXBoYW50IGluIExBIHpvbwo=\n    client_id:\t\tVGhlcmUgaXMgYSBodWdlIHdoaXRlIGVsZXBoYW50IGluIExBIHpvbwo=\n    client_secret:\t\tMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDUK\n    Creating imconnectionsecret.\n    secret/imconnectionsecret created\n    Creating CloudForms IMInstall\n    iminstall.infra.management.ibm.com/im-iminstall created\n    Sleeping for 30 seconds.\n    Creating IM Connection Resource\n    connection.infra.management.ibm.com/imconnection created\n    Applying navigation UI updates.\n    Checking if kubectl is installed...\n    kubectl is installed\n    Running kubectl command to retrieve navigation items...\n    *** A backup cr file is stored in ./navconfigurations.original\n\n    Finished importing into navconfigurations.yaml\n    Verifying...\n    Navconfigurations.yaml file is valid\n    ------------\n    Find the Infrastructure Management and CP4MCM console URL.\n    https://cp-console.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    CP4MCM URL: https://cp-console.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    IM URL: https://inframgmtinstall.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    Navigation items added to file\n    Updating MCM with new items...\n    Finished updating MCM\n    Success!\n    ```\n\n    You can verify if all the pods started correctly running the following command\n\n    ```bash\n    oc get pods -n management-infrastructure-management\n    ```\n\n    HINT: You can proceed with installing monitoring without waiting for Infrastructure management install to complete.\n\n16. To install monitoring module, run the following command:\n\n    ```bash\n    ./cp4m/6-MonitoringModule.sh\n    ```\n\n    Installation takes about 15 minutes and the sample output looks like below:\n\n    ```bash\n    $ ./cp4m/6-MonitoringModule.sh\n    Adding Monitoring Storage Config to Installaton\n    installation.orchestrator.management.ibm.com/ibm-management patched\n    Enabling Monitoring Module\n    installation.orchestrator.management.ibm.com/ibm-management patched\n    Sleeping until install starts.\n    Authenticating...\n    OK\n\n    Targeted account mycluster Account\n\n    Targeted namespace default\n\n    Configuring kubectl ...\n    Property \"clusters.mycluster\" unset.\n    Property \"users.mycluster-user\" unset.\n    Property \"contexts.mycluster-context\" unset.\n    Cluster \"mycluster\" set.\n    User \"mycluster-user\" set.\n    Context \"mycluster-context\" created.\n    Switched to context \"mycluster-context\".\n    OK\n\n    Configuring helm: /Users/xxxxxxx/.helm\n    OK\n    User bob imported\n    User tom imported\n    OK\n    OK\n    Docker config for SECRET=ibm-management-pull-secret in NAMESPACE=cp4m\n    ENTITLED_REGISTRY_DOCKERCONFIG=XXXXXXXXHIDDENXXXXXXXXX\n    deployable.app.ibm.com/cnmon-pullsecret-deployable patched\n    NAME                                                     TEMPLATE-KIND   TEMPLATE-APIVERSION    AGE   STATUS\n    cnmon-chl-ibm-ace-dashboard-icp4i-prod-3.1.4             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ace-server-icp4i-prod-3.1.4                HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-apiconnect-icp4i-prod-1.0.5                HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-apm-ema-prod-1.1.1                         HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-app-connect-designer-icp4i-3.1.4           HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-aspera-hsts-icp4i-1.3.0                    HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-aspera-hsts-prod-1.2.3                     HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-cloud-appmgmt-prod-1.7.1                   HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-cp4mcm-cloud-native-monitoring-1.3.0       HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-cpq-prod-1.0.0                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-datapower-icp4i-1.0.6                      HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-eam-prod-4.1.0                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-eventstreams-icp4i-prod-1.4.2              HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-eventstreams-rhel-icp4i-prod-1.3.3         HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-icp4i-asset-repo-prod-4.0.1                HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-icp4i-prod-3.1.1                           HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-icp4i-tracing-prod-1.0.2                   HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-mobilefoundation-prod-3.0.5                HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-mqadvanced-server-integration-prod-6.0.0   HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-mqadvanced-server-prod-6.0.0               HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-mss-prod-1.0.0                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-netcool-prod-2.1.4                         HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-security-foundations-prod-1.0.7            HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-security-solutions-prod-1.0.7              HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-spectrum-protect-plus-prod-1.0.0           HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ucd-prod-6.0.8                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ucda-prod-2.1.9                            HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ucdr-prod-2.0.9                            HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ucv-prod-1.5.5                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-wml-accelerator-prod-1.0.0                 HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-pullsecret-deployable                              Secret          v1                     10m   Propagated\n    cnmon-sub-deployable                                     Subscription    app.ibm.com/v1alpha1   10m   Propagated\n    NAME        TYPE       PATHNAME                                                             AGE\n    cnmon-chl   HelmRepo   https://raw.githubusercontent.com/IBM/charts/master/repo/entitled/   10m\n    NAME        STATUS       AGE\n    cnmon-sub   Propagated   10m\n    NAME       AGE\n    cnmon-pr   10m\n    ```\n\n17. Congratulations!\n\n    You should have a Cloud Pak for Multicloud Management 2.0 installed with the following modules enabled:\n    - Core Services\n    - Infrastructure Management (CAM + CloudForms)\n    - Monitoring (ICAM)\n    - with OpenLDAP authentication\n\n\n## Authentication to github.ibm.com\n\nIn order to clone the repositories from GitHub Enterprise (github.ibm.com) you need to authenticate with w3 credentials. It is possible with user & password in the browser, but for authentication with git CLI you need to generate personal access token (PAT).\n\nYou need to have git installed on your workstation. If you are using Mac, to configure git cli to use Keychain Access for storing the credentials run\n\n```bash\ngit credential-osxkeychain\ngit config --global credential.helper osxkeychain\n```\n\nFor other platforms check [Github Docs](https://docs.github.com/en/github/using-git/caching-your-github-credentials-in-git).\n\n1. Open the page [https://github.ibm.com/settings/tokens](https://github.ibm.com/settings/tokens) and login with your w3 credentials\n\n![personal access tokens](images/2020-09-14-10-18-30.png)\n\n2. Click **Generate new token**. Then provide a **Name** and select **repo** and **admin:org** checkboxes. Finanlly, click **Generate token** at the bottom.\n\n![new token](images/2020-09-14-10-24-07.png)\n\n3. Copy the generated token and use as password when asked by the git cli when you run the `git clone` command\n\n![copy token](images/2020-09-14-10-25-48.png)\n\n\n\n","type":"Mdx","contentDigest":"6a7ba5558fef5f5e9d9dd155809e7018","counter":764,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"NEW - Installing Cloud Pak for MCM 2.0","description":"IBM Cloud Pak for MCM 2.0"},"exports":{},"rawBody":"---\ntitle: NEW - Installing Cloud Pak for MCM 2.0\ndescription: IBM Cloud Pak for MCM 2.0\n---\n\nNow that you have a ROKS cluster, you need to install manually the Cloud Pak for Multicloud Management 2.0. Let's do it!\n\nTo use the installation script provided below you need a ROKS cluster with 2 or more worker nodes (full install requires 4 nodes 16 core + 32 GB RAM) and workstation (Linux or Mac) with following tools installed: (git, make, jq, cloudctl, oc, kubectl)\n\n1. Open a terminal window and create some working directory. Clone git repo with the installation scripts. You may be asked for w3 authentication. If you haven't done so before look at the [Authentication to github.ibm.com](#authentication-to-githubibmcom) at the bottom.\n\n   ```bash\n   mkdir installmcm20\n   cd installmcm20\n   git clone https://github.ibm.com/john-webb/CP4MCM_20.git\n   ```\n\n2. Login to [https://cloud.ibm.com](https://cloud.ibm.com) if you have not done that already. Open the details of OCP cluster in IBM Cloud - if you requested it via ibm.com/demos go to the **My reservations**, open **Details** and use **Cluster URL**.\n\n   ![roks details](images/2020-09-14-21-14-11.png)\n\n3. Click the **Openshift web console** to open Openshift console and get the CLI login credentials\n\n   ![openshift console](images/2020-09-09-13-47-25.png)\n\n   ![copy login command](images/2020-09-09-13-43-56.png)\n\n   ![oc command](images/2020-09-09-14-12-43.png)\n\n   Copy and paste the `oc login` command to the Terminal window on your workstation.\n\n   ![terminal oc login](images/2020-09-09-14-20-36.png)\n\n4. Log in to [MyIBM Container Software Library](https://myibm.ibm.com/products-services/containerlibrary) by using the IBMid and password that are associated with the entitled software.\n\n5. In the Entitlement keys section, select Copy key to copy the entitlement key to the clipboard.\n\n   ![entitlement key](images/2020-09-09-14-14-40.png)\n\n6. In the terminal window on your workstation create an environment variable holding the value of the entitlement key\n\n   ```bash\n   cd CP4MCM_20\n   export ENTITLED_REGISTRY_KEY=<entitlement_key>\n   ```\n\n7. With your favourite editor edit the file `0-setup_env.sh` on your workstation and adjust the following variables (your ROKS cluster may be deployed in other region or zone)\n\n   ```bash\n   ROKSREGION=\"us-south\"\n   ROKSZONE=\"dal10\"\n   ```\n\n   The values can be found in IBM Cloud console\n   ![cluster location](images/2020-09-09-14-33-01.png)\n\n8. Run the installation first scipt which registers the operators in the catalog\n\n   ```bash\n   ./1-common-services.sh\n   ```\n\n   Output should look like below:\n\n   ```bash\n   ./1-common-services.sh\n   catalogsource.operators.coreos.com/opencloud-operators created\n   Waiting for CatalogSource (60 seconds)\n   Done.\n   ```\n\n9. To install Cloud Pak for MCM Core Services run the following command\n\n   ```bash\n   ./cp4m/2-cp4mcm-core.sh\n   ```\n\n   Output should look like below:\n\n   ```bash\n   ./cp4m/2-cp4mcm-core.sh\n   Now using project \"cp4m\" on server \"https://c100-e.us-south.containers.cloud.ibm.com:30972\".\n\n   You can add applications to this project with the 'new-app' command. For example, try:\n\n       oc new-app django-psql-example\n\n   to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:\n\n       kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node\n\n   secret/ibm-management-pull-secret created\n   catalogsource.operators.coreos.com/management-installer-index created\n   Waiting for CP4MCM CatalogSource (60 seconds)\n   subscription.operators.coreos.com/ibm-management-orchestrator created\n   Waiting for CP4MCM Subscription (60 seconds)\n   Applying the CP4MCM 2.0 - Core Installation\n   installation.orchestrator.management.ibm.com/ibm-management created\n   Installation has started. Check status by running 'oc get opreq -A'\n   NAMESPACE   NAME                        AGE   PHASE        CREATED AT\n   cp4m        ibm-management-cs           12s   Installing   2020-09-09T12:45:56Z\n   cp4m        ibm-management-foundation   5s    Pending      2020-09-09T12:46:03Z\n   ```\n\n   Install can take several minutes. Wait until the output of `oc get opreq -A` command looks like below:\n\n   ```bash\n   $ oc get opreq -A\n   NAMESPACE             NAME                                         AGE     PHASE     CREATED AT\n   cp4m                  ibm-management-cs                            8m22s   Running   2020-09-09T12:45:56Z\n   cp4m                  ibm-management-foundation                    8m15s   Running   2020-09-09T12:46:03Z\n   ibm-common-services   catalog-ui-request                           6m6s    Running   2020-09-09T12:48:12Z\n   ibm-common-services   helm-api-request                             3m27s   Running   2020-09-09T12:50:51Z\n   ibm-common-services   helm-repo-request                            3m26s   Running   2020-09-09T12:50:52Z\n   ibm-common-services   ibm-auditlogging-request                     6m8s    Running   2020-09-09T12:48:10Z\n   ibm-common-services   ibm-commonui-request                         6m9s    Running   2020-09-09T12:48:09Z\n   ibm-common-services   ibm-iam-request                              7m41s   Running   2020-09-09T12:46:37Z\n   ibm-common-services   ibm-licensing-request                        6m11s   Running   2020-09-09T12:48:07Z\n   ibm-common-services   ibm-metering-request                         6m10s   Running   2020-09-09T12:48:08Z\n   ibm-common-services   ibm-mongodb-request                          5m33s   Running   2020-09-09T12:48:45Z\n   ibm-common-services   management-ingress                           6m12s   Running   2020-09-09T12:48:06Z\n   ibm-common-services   monitoring-exporters-operator-request        7m40s   Running   2020-09-09T12:46:38Z\n   ibm-common-services   monitoring-grafana-operator-request          6m13s   Running   2020-09-09T12:48:05Z\n   ibm-common-services   monitoring-prometheus-ext-operator-request   6m13s   Running   2020-09-09T12:48:05Z\n   ibm-common-services   platform-api-request                         6m7s    Running   2020-09-09T12:48:11Z\n   kube-system           ibm-license-advisor-sender-instance          6m5s    Running   2020-09-09T12:48:13Z\n   ```\n\n10. To access the Cloud Pak console run the following commands to find out the URL and admin password\n\n    ```bash\n    YOUR_CP4MCM_ROUTE=`oc -n ibm-common-services get route cp-console --template '{{.spec.host}}'`\n    CP_PASSWORD=`oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 -d`\n    echo \" You can access your cluster with the URL and credentials below:\"\n    echo \" URL = https://$YOUR_CP4MCM_ROUTE\"\n    echo \" User = admin\"\n    echo \" Password = $CP_PASSWORD\"\n    ```\n\n11. Use the output from the above command in your browser. \n\n    ![cp-console login](images/2020-09-09-15-04-03.png)\n\n12. Upon successful login you should see the welcome screen shown below. If you see error *504 Gateway Time-out*, it means the environment was not yet fully initialized. Wait additional 1-2 minutes and refresh the browser.\n\n    ![welcome screen](images/2020-09-09-15-06-48.png)\n\n13. Continue the installation running in the terminal window LDAP creation script `./cp4m/3-ldap.sh`. To complete this part you need `cloudctl` utility installed on your workstation\n    You can check if it is installed running the following command:\n\n    ```bash\n    cloudctl version\n    ```\n\n    For procedure how to install `cloudctl` look here: [Installing cloudctl](https://www.ibm.com/support/knowledgecenter/pl/SSFC4F_2.0.0/cloudctl/3.x.x/install_cli.html)\n\n    ```bash\n    ./cp4m/3-ldap.sh\n    ```\n\n    Sample output looks like below:\n\n    ```bash\n    Authenticating...\n    OK\n\n    Targeted account mycluster Account\n\n    Targeted namespace default\n\n    Configuring kubectl ...\n    Property \"clusters.mycluster\" unset.\n    Property \"users.mycluster-user\" unset.\n    Property \"contexts.mycluster-context\" unset.\n    Cluster \"mycluster\" set.\n    User \"mycluster-user\" set.\n    Context \"mycluster-context\" created.\n    Switched to context \"mycluster-context\".\n    OK\n\n    Configuring helm: /Users/dymaczew/.helm\n    OK\n    securitycontextconstraints.security.openshift.io/anyuid added to: [\"system:serviceaccount:ldap:default\"]\n    deployment.apps/ldap created\n    service/ldap-service created\n    Sleeping while LDAP is starting.. (60 seconds)\n    LDAP connection my_ldap 'bcded990-f29d-11ea-878f-e59d81bf9fa1' successfully created\n    OK\n    Group operations imported\n    OK\n    ```\n\n   At this point the LDAP authentication is enabled. You can notice the changed Login screen, now showing:\n\n   ![login options](images/2020-09-09-15-16-25.png)\n\n   If you select **Enterprise LDAP** you can use one of the predefined users to login - for example **bob** with password **Passw0rd**.\n\n14. To install Infrastructure Management module run the following script:\n\n    ```bash\n    ./cp4m/4-CAMandIM.sh\n    ```\n\n    Output will look like below:\n\n    ```bash\n    Create management-infrastructure-management namespace.\n    Now using project \"management-infrastructure-management\" on server \"https://c100-e.us-south.containers.cloud.ibm.com:30972\".\n\n    You can add applications to this project with the 'new-app' command. For example, try:\n\n        oc new-app django-psql-example\n\n    to build a new example application in Python. Or use kubectl to deploy a simple Kubernetes application:\n\n        kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node\n\n    Adding CAM Config to Installaton (CAM_API_KEY = )(ROKS = true)\n    installation.orchestrator.management.ibm.com/ibm-management patched\n    Enabling the IM Module in the  Installation\n    installation.orchestrator.management.ibm.com/ibm-management patched\n    Installation has started. Check status by running 'oc get opreq -A'\n    ```\n\n15. To install CloudForms you can run the following script:\n\n    ```bash\n    ./cp4m/5-CloudFormsandOIDC.sh`\n    ```\n\n    Output should be similar to the one shown below:\n\n    ```bash\n    YOUR_CLIENT_ID = VGhlcmUgaXMgYSBodWdlIHdoaXRlIGVsZXBoYW50IGluIExBIHpvbwo=\n    YOUR_CLIENT_SECRET = MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDUK\n    YOUR_CP4MCM_ROUTE = cp-console.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    YOUR_IM_HTTPD_ROUTE = inframgmtinstall.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    CP_PASSWORD = XXXXXXXXXXXXXXXXXXXXXXX\n    ENTITLED_REGISTRY_SECRET = ibm-management-pull-secret\n    Authenticating...\n    OK\n\n    Targeted account mycluster Account\n\n    Targeted namespace ibm-common-services\n\n    Configuring kubectl ...\n    Property \"clusters.mycluster\" unset.\n    Property \"users.mycluster-user\" unset.\n    Property \"contexts.mycluster-context\" unset.\n    Cluster \"mycluster\" set.\n    User \"mycluster-user\" set.\n    Context \"mycluster-context\" created.\n    Switched to context \"mycluster-context\".\n    OK\n\n    Configuring helm: /Users/dymaczew/.helm\n    OK\n    Registering IAM OAUTH client.\n    OK\n    client_name:\t\tVGhlcmUgaXMgYSBodWdlIHdoaXRlIGVsZXBoYW50IGluIExBIHpvbwo=\n    client_id:\t\tVGhlcmUgaXMgYSBodWdlIHdoaXRlIGVsZXBoYW50IGluIExBIHpvbwo=\n    client_secret:\t\tMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDUK\n    Creating imconnectionsecret.\n    secret/imconnectionsecret created\n    Creating CloudForms IMInstall\n    iminstall.infra.management.ibm.com/im-iminstall created\n    Sleeping for 30 seconds.\n    Creating IM Connection Resource\n    connection.infra.management.ibm.com/imconnection created\n    Applying navigation UI updates.\n    Checking if kubectl is installed...\n    kubectl is installed\n    Running kubectl command to retrieve navigation items...\n    *** A backup cr file is stored in ./navconfigurations.original\n\n    Finished importing into navconfigurations.yaml\n    Verifying...\n    Navconfigurations.yaml file is valid\n    ------------\n    Find the Infrastructure Management and CP4MCM console URL.\n    https://cp-console.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    CP4MCM URL: https://cp-console.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    IM URL: https://inframgmtinstall.dtecp4mcmv44-8946bbc006b7c6eb0829d088919818bb-0000.us-south.containers.appdomain.cloud\n    Navigation items added to file\n    Updating MCM with new items...\n    Finished updating MCM\n    Success!\n    ```\n\n    You can verify if all the pods started correctly running the following command\n\n    ```bash\n    oc get pods -n management-infrastructure-management\n    ```\n\n    HINT: You can proceed with installing monitoring without waiting for Infrastructure management install to complete.\n\n16. To install monitoring module, run the following command:\n\n    ```bash\n    ./cp4m/6-MonitoringModule.sh\n    ```\n\n    Installation takes about 15 minutes and the sample output looks like below:\n\n    ```bash\n    $ ./cp4m/6-MonitoringModule.sh\n    Adding Monitoring Storage Config to Installaton\n    installation.orchestrator.management.ibm.com/ibm-management patched\n    Enabling Monitoring Module\n    installation.orchestrator.management.ibm.com/ibm-management patched\n    Sleeping until install starts.\n    Authenticating...\n    OK\n\n    Targeted account mycluster Account\n\n    Targeted namespace default\n\n    Configuring kubectl ...\n    Property \"clusters.mycluster\" unset.\n    Property \"users.mycluster-user\" unset.\n    Property \"contexts.mycluster-context\" unset.\n    Cluster \"mycluster\" set.\n    User \"mycluster-user\" set.\n    Context \"mycluster-context\" created.\n    Switched to context \"mycluster-context\".\n    OK\n\n    Configuring helm: /Users/xxxxxxx/.helm\n    OK\n    User bob imported\n    User tom imported\n    OK\n    OK\n    Docker config for SECRET=ibm-management-pull-secret in NAMESPACE=cp4m\n    ENTITLED_REGISTRY_DOCKERCONFIG=XXXXXXXXHIDDENXXXXXXXXX\n    deployable.app.ibm.com/cnmon-pullsecret-deployable patched\n    NAME                                                     TEMPLATE-KIND   TEMPLATE-APIVERSION    AGE   STATUS\n    cnmon-chl-ibm-ace-dashboard-icp4i-prod-3.1.4             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ace-server-icp4i-prod-3.1.4                HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-apiconnect-icp4i-prod-1.0.5                HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-apm-ema-prod-1.1.1                         HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-app-connect-designer-icp4i-3.1.4           HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-aspera-hsts-icp4i-1.3.0                    HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-aspera-hsts-prod-1.2.3                     HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-cloud-appmgmt-prod-1.7.1                   HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-cp4mcm-cloud-native-monitoring-1.3.0       HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-cpq-prod-1.0.0                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-datapower-icp4i-1.0.6                      HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-eam-prod-4.1.0                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-eventstreams-icp4i-prod-1.4.2              HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-eventstreams-rhel-icp4i-prod-1.3.3         HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-icp4i-asset-repo-prod-4.0.1                HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-icp4i-prod-3.1.1                           HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-icp4i-tracing-prod-1.0.2                   HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-mobilefoundation-prod-3.0.5                HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-mqadvanced-server-integration-prod-6.0.0   HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-mqadvanced-server-prod-6.0.0               HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-mss-prod-1.0.0                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-netcool-prod-2.1.4                         HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-security-foundations-prod-1.0.7            HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-security-solutions-prod-1.0.7              HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-spectrum-protect-plus-prod-1.0.0           HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ucd-prod-6.0.8                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ucda-prod-2.1.9                            HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ucdr-prod-2.0.9                            HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-ucv-prod-1.5.5                             HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-chl-ibm-wml-accelerator-prod-1.0.0                 HelmRelease     app.ibm.com/v1alpha1   10m\n    cnmon-pullsecret-deployable                              Secret          v1                     10m   Propagated\n    cnmon-sub-deployable                                     Subscription    app.ibm.com/v1alpha1   10m   Propagated\n    NAME        TYPE       PATHNAME                                                             AGE\n    cnmon-chl   HelmRepo   https://raw.githubusercontent.com/IBM/charts/master/repo/entitled/   10m\n    NAME        STATUS       AGE\n    cnmon-sub   Propagated   10m\n    NAME       AGE\n    cnmon-pr   10m\n    ```\n\n17. Congratulations!\n\n    You should have a Cloud Pak for Multicloud Management 2.0 installed with the following modules enabled:\n    - Core Services\n    - Infrastructure Management (CAM + CloudForms)\n    - Monitoring (ICAM)\n    - with OpenLDAP authentication\n\n\n## Authentication to github.ibm.com\n\nIn order to clone the repositories from GitHub Enterprise (github.ibm.com) you need to authenticate with w3 credentials. It is possible with user & password in the browser, but for authentication with git CLI you need to generate personal access token (PAT).\n\nYou need to have git installed on your workstation. If you are using Mac, to configure git cli to use Keychain Access for storing the credentials run\n\n```bash\ngit credential-osxkeychain\ngit config --global credential.helper osxkeychain\n```\n\nFor other platforms check [Github Docs](https://docs.github.com/en/github/using-git/caching-your-github-credentials-in-git).\n\n1. Open the page [https://github.ibm.com/settings/tokens](https://github.ibm.com/settings/tokens) and login with your w3 credentials\n\n![personal access tokens](images/2020-09-14-10-18-30.png)\n\n2. Click **Generate new token**. Then provide a **Name** and select **repo** and **admin:org** checkboxes. Finanlly, click **Generate token** at the bottom.\n\n![new token](images/2020-09-14-10-24-07.png)\n\n3. Copy the generated token and use as password when asked by the git cli when you run the `git clone` command\n\n![copy token](images/2020-09-14-10-25-48.png)\n\n\n\n","fileAbsolutePath":"/Users/dymaczew/Documents/_code/mcm/cp4mcm-demohub/src/pages/environment/installpak20/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","227138135","227138135","2456312558","2746626797","2746626797","3018647132","3018647132","3906363820","3906363820","768070550"]}